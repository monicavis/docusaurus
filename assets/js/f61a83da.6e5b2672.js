"use strict";(self.webpackChunkarchive_view=self.webpackChunkarchive_view||[]).push([[6609],{3905:(t,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>k});var a=n(67294);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,l=function(t,e){if(null==t)return{};var n,a,l={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var s=a.createContext({}),p=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},u=function(t){var e=p(t.components);return a.createElement(s.Provider,{value:e},t.children)},c="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(t,e){var n=t.components,l=t.mdxType,r=t.originalType,s=t.parentName,u=o(t,["components","mdxType","originalType","parentName"]),c=p(n),d=l,k=c["".concat(s,".").concat(d)]||c[d]||m[d]||r;return n?a.createElement(k,i(i({ref:e},u),{},{components:n})):a.createElement(k,i({ref:e},u))}));function k(t,e){var n=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=n.length,i=new Array(r);i[0]=d;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o[c]="string"==typeof t?t:l,i[1]=o;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},63754:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=n(87462),l=(n(67294),n(3905));const r={},i="2.2 Post-installation Steps",o={unversionedId:"Installation Manual/Installing_AV/2.2Post-installation_Steps/2.2Post-installation_Steps",id:"version-11.7.0.3/Installation Manual/Installing_AV/2.2Post-installation_Steps/2.2Post-installation_Steps",title:"2.2 Post-installation Steps",description:"The application can be started in two different ways based on the privileges that the user has",source:"@site/versioned_docs/version-11.7.0.3/Installation Manual/2.Installing_AV/2.2Post-installation_Steps/2.2Post-installation_Steps.md",sourceDirName:"Installation Manual/2.Installing_AV/2.2Post-installation_Steps",slug:"/Installation Manual/Installing_AV/2.2Post-installation_Steps/",permalink:"/docusaurus/docs/Installation Manual/Installing_AV/2.2Post-installation_Steps/",draft:!1,tags:[],version:"11.7.0.3",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"2.1.2 Offline installation",permalink:"/docusaurus/docs/Installation Manual/Installing_AV/2.1Installing_AV_Conversion_Server/2.1.2Offline_Installation/"},next:{title:"2.3 Installing the Archive Viewer Query Server",permalink:"/docusaurus/docs/Installation Manual/Installing_AV/2.3_Installing_AV_Query_Server/"}},s={},p=[],u={toc:p},c="wrapper";function m(t){let{components:e,...n}=t;return(0,l.kt)(c,(0,a.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"22-post-installation-steps"},"2.2 Post-installation Steps"),(0,l.kt)("p",null,"The application can be started in two different ways based on the privileges that the user has"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"sudo user")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Navigate to the services folder\napplication_location/ArchiveViewer/services/")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Run the below command:\n",(0,l.kt)("strong",{parentName:"p"},"sudo ./config_systemctl.sh"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"gunicorn. service and nginx_sudo.conf will be copied to the specified location"))),(0,l.kt)("p",{parentName:"li"},"There are two ways to start the application"),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Using Python script")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Navigate to the location where the application is installed application_location/ArchiveViewer/scripts/startup_scripts")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Run the below command along with ",(0,l.kt)("strong",{parentName:"p"},"start, stop,")," or ",(0,l.kt)("strong",{parentName:"p"},"restart")," based on your requirement\n",(0,l.kt)("strong",{parentName:"p"},"python3.9 application_startup.py")))),(0,l.kt)("admonition",{parentName:"li",type:"note"},(0,l.kt)("p",{parentName:"admonition"},"Run the ",(0,l.kt)("strong",{parentName:"p"},"sudo systemctl daemon-reload")," command to reload gunicorn file")))),(0,l.kt)("p",null,"Using systemctl command:"),(0,l.kt)("table",{class:"tableAlign"},(0,l.kt)("tbody",null,(0,l.kt)("tr",{style:{backgroundColor:"#22d3ee"}},(0,l.kt)("td",null,(0,l.kt)("b",null,"Action")),(0,l.kt)("td",null,(0,l.kt)("b",null,"Commands"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("b",null,"start")),(0,l.kt)("td",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"sudo systemctl start gunicorn")),(0,l.kt)("li",null,(0,l.kt)("code",null,"sudo systemctl start nginx")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("b",null,"check status")),(0,l.kt)("td",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"sudo systemctl status gunicorn")),(0,l.kt)("li",null,(0,l.kt)("code",null,"sudo systemctl status nginx")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("b",null,"stop")),(0,l.kt)("td",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"sudo systemctl stop gunicorn")),(0,l.kt)("li",null,(0,l.kt)("code",null,"sudo systemctl stop nginx")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("b",null,"restart")),(0,l.kt)("td",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"sudo systemctl restart gunicorn")),(0,l.kt)("li",null,(0,l.kt)("code",null,"sudo systemctl restart nginx")))))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Non-sudo user:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"To start the application, go to the location where the application is installed\napplication_location/ArchiveViewer/scripts/startup_scripts and run the command ",(0,l.kt)("strong",{parentName:"p"},"./user_startup.sh")," along with ",(0,l.kt)("strong",{parentName:"p"},"start, stop,")," or ",(0,l.kt)("strong",{parentName:"p"},"restart")," based on your requirement."),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Example: ./user_startup.sh start")),(0,l.kt)("p",{parentName:"li"},"This configures the gunicorn and nginx services."),(0,l.kt)("admonition",{parentName:"li",type:"note"},(0,l.kt)("p",{parentName:"admonition"},"We have to change the ownership before starting the services /var/logs/nginx/ and services/var/error.log")))))),(0,l.kt)("p",null,"The logs for gunicorn are stored under ",(0,l.kt)("strong",{parentName:"p"},"ArchiveViewer_logs"),", which is located outside the application installation location."),(0,l.kt)("p",null,"For example, if the application location is, ",(0,l.kt)("inlineCode",{parentName:"p"},"/home/linux/IBM/InfoSphere/Optim/ArchiveViewer/"),", then the logs are stored in the path: ",(0,l.kt)("inlineCode",{parentName:"p"},"/home/linux/IBM/InfoSphere/Optim/ArchiveViewer_log/gunicorn")),(0,l.kt)("p",null,"The property file should be stored under the application installation location, as shown below:\n",(0,l.kt)("inlineCode",{parentName:"p"},"/home/linux/IBM/InfoSphere/Optim/ArchiveViewer/properties/version")))}m.isMDXComponent=!0}}]);